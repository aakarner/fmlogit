sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
if(length(atemp)>1)print(c(length(atemp),s))
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,atemp[c]); year=c(year,i); c=-1
}
}
}
length(author)
length(year)
atemp
atemp[-1]
atemp[0]
atemp[1]
a = c("a","b")
a[-1]
atemp[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
if(length(atemp)>1)print(c(length(atemp),s))
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,atemp[c]); year=c(year,i); c=c+1
}
}
}
length(author)
length(year)
author=author[-1]; year=year[-1]
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = cbind(author,year)
str(bibs)
duplicated(bibs)
bibs = bibs[!duplicated(bibs),]
length(bibs)
ncol(bibs)
nrow(bibs)
bibcheck = function(input){
perm = NA # storage
for(j in input){
# all types: (Boyle, 2000), (Boyle, 2000 ; Coyle, 2001) , Boyle(2000), Boyle and Coyle(2000)
locs = gregexpr("\\(.*?\\)", j) # string locations
locs_a = c(1,locs[[1]],100000000)
raws = gsub("[\\(\\)]", "", regmatches(j, locs)[[1]])
c=0 # count
for(s in raws){
c=c+1
sn = as.numeric(substr(s,1,4))
if(is.na(sn)){ # string in brackets does not start with a number.
perm = c(perm,strsplit(s,";")[[1]])
}else{ #Boyle(2000), Boyle and Coyle(2000), Boyle and Coyle(2000 and 2001)
if(sn<1900|sn>2020) next # not a valid bib. jump out
sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
if(length(atemp)>1)print(c(length(atemp),s))
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,atemp[c]); year=c(year,i); c=c+1
}
}
}
author=author[-1]; year=year[-1]
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = cbind(author,year)
bibs = bibs[!duplicated(bibs),]
return(bibs)
}
kjbref = bibcheck(t(kjbtext))
kjbref
a
a[3]
bibcheck = function(input){
perm = NA # storage
for(j in input){
# all types: (Boyle, 2000), (Boyle, 2000 ; Coyle, 2001) , Boyle(2000), Boyle and Coyle(2000)
locs = gregexpr("\\(.*?\\)", j) # string locations
locs_a = c(1,locs[[1]],100000000)
raws = gsub("[\\(\\)]", "", regmatches(j, locs)[[1]])
c=0 # count
for(s in raws){
c=c+1
sn = as.numeric(substr(s,1,4))
if(is.na(sn)){ # string in brackets does not start with a number.
perm = c(perm,strsplit(s,";")[[1]])
}else{ #Boyle(2000), Boyle and Coyle(2000), Boyle and Coyle(2000 and 2001)
if(sn<1900|sn>2020) next # not a valid bib. jump out
sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,ifelse(length(atemp>1),atemp[c],atemp)); year=c(year,i); c=c+1
}
}
}
author=author[-1]; year=year[-1]
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = cbind(author,year)
bibs = bibs[!duplicated(bibs),]
return(bibs)
}
kjbref = bibcheck(t(kjbtext))
kjbref
bibcheck = function(input){
perm = NA # storage
for(j in input){
# all types: (Boyle, 2000), (Boyle, 2000 ; Coyle, 2001) , Boyle(2000), Boyle and Coyle(2000)
locs = gregexpr("\\(.*?\\)", j) # string locations
locs_a = c(1,locs[[1]],100000000)
raws = gsub("[\\(\\)]", "", regmatches(j, locs)[[1]])
c=0 # count
for(s in raws){
c=c+1
sn = as.numeric(substr(s,1,4))
if(is.na(sn)){ # string in brackets does not start with a number.
perm = c(perm,strsplit(s,";")[[1]])
}else{ #Boyle(2000), Boyle and Coyle(2000), Boyle and Coyle(2000 and 2001)
if(sn<1900|sn>2020) next # not a valid bib. jump out
sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,ifelse(length(atemp)>1,atemp[c],atemp)); year=c(year,i); c=c+1
}
}
}
author=author[-1]; year=year[-1]
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = cbind(author,year)
bibs = bibs[!duplicated(bibs),]
return(bibs)
}
kjbref = bibcheck(t(kjbtext))
kjbref
str(bibs$author)
str(bibs)
bibs = as.data.frame(bibs)
bibs[with(order(bibs)),]
## so, use readtext first
# kjbtext = read.delim("C:/Users/f1kidd/Desktop/kjb/kjb_text.txt")
bibcheck = function(input){
perm = NA # storage
for(j in input){
# all types: (Boyle, 2000), (Boyle, 2000 ; Coyle, 2001) , Boyle(2000), Boyle and Coyle(2000)
locs = gregexpr("\\(.*?\\)", j) # string locations
locs_a = c(1,locs[[1]],100000000)
raws = gsub("[\\(\\)]", "", regmatches(j, locs)[[1]])
c=0 # count
for(s in raws){
c=c+1
sn = as.numeric(substr(s,1,4))
if(is.na(sn)){ # string in brackets does not start with a number.
perm = c(perm,strsplit(s,";")[[1]])
}else{ #Boyle(2000), Boyle and Coyle(2000), Boyle and Coyle(2000 and 2001)
if(sn<1900|sn>2020) next # not a valid bib. jump out
sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,ifelse(length(atemp)>1,atemp[c],atemp)); year=c(year,i); c=c+1
}
}
}
author=author[-1]; year=year[-1]
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = as.data.frame(cbind(author,year))
bibs = bibs[!duplicated(bibs),]
bibs = bibs[with(bibs,order(bibs$author)),]
return(bibs)
}
kjbref = bibcheck(t(kjbtext))
kjbref
getwd()
write.csv(kjbref,"kjbref.csv")
## so, read text first
# kjbtext = read.delim("C:/Users/f1kidd/Desktop/kjb/kjb_text.txt")
bibcheck = function(input){
perm = NA # storage
for(j in input){
# all types: (Boyle, 2000), (Boyle, 2000 ; Coyle, 2001) , Boyle(2000), Boyle and Coyle(2000)
locs = gregexpr("\\(.*?\\)", j) # string locations
locs_a = c(1,locs[[1]],100000000)
raws = gsub("[\\(\\)]", "", regmatches(j, locs)[[1]])
c=0 # count
for(s in raws){
c=c+1
sn = as.numeric(substr(s,1,4))
if(is.na(sn)){ # string in brackets does not start with a number.
perm = c(perm,strsplit(s,";")[[1]])
}else{ #Boyle(2000), Boyle and Coyle(2000), Boyle and Coyle(2000 and 2001)
if(sn<1900|sn>2020) next # not a valid bib. jump out
sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,ifelse(length(atemp)>1,atemp[c],atemp)); year=c(year,i); c=c+1
}
}
}
author=author[-1]; year=year[-1]
author = gsub("et al.","et al",author); author = gsub("et al","et al.",author) # change all et al to et al.
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = as.data.frame(cbind(author,year))
bibs = bibs[!duplicated(bibs),]
bibs = bibs[with(bibs,order(bibs$author)),]
return(bibs)
}
kjbref = bibcheck(t(kjbtext))
write.csv(kjbref,"kjbref.csv")
dim(kjbref)
kjbref
## so, read text first
# kjbtext = read.delim("C:/Users/f1kidd/Desktop/kjb/kjb_text.txt")
bibcheck = function(input){
perm = NA # storage
for(j in input){
# all types: (Boyle, 2000), (Boyle, 2000 ; Coyle, 2001) , Boyle(2000), Boyle and Coyle(2000)
locs = gregexpr("\\(.*?\\)", j) # string locations
locs_a = c(1,locs[[1]],100000000)
raws = gsub("[\\(\\)]", "", regmatches(j, locs)[[1]])
c=0 # count
for(s in raws){
c=c+1
sn = as.numeric(substr(s,1,4))
if(is.na(sn)){ # string in brackets does not start with a number.
perm = c(perm,strsplit(s,";")[[1]])
}else{ #Boyle(2000), Boyle and Coyle(2000), Boyle and Coyle(2000 and 2001)
if(sn<1900|sn>2020) next # not a valid bib. jump out
sy = as.character(as.numeric(strsplit(s,"and")[[1]])) # for Boyle and Coyle(2000 and 2001)
jtemp = substr(j,locs_a[c],locs_a[c+1])
locs2 = regmatches(jtemp,gregexpr("[A-Z].{1,15} and [A-Z].{1,20}\\(", jtemp,perl=T))[[1]] # Boyle and Coyle(2000)
if(length(locs2>0)){
author = strsplit(locs2,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}else{ # Boyle et al. (2000)
locs3 = regmatches(jtemp,gregexpr("[A-Z].{1,20}\\(", jtemp,perl=T))[[1]]
author = strsplit(locs3," ")[[1]][1]
author = strsplit(author,"’")[[1]][1]
bib=sapply(sy, function(x) paste(author,x,sep=" "))
perm=c(perm,bib)
}
}
}}
perm = as.vector(perm[-1])
perm = gsub(",","",perm)
perm = gsub("\\( ","",perm)
perm = gsub("  "," ",perm)
perm = gsub("e.g.","",perm)
perm = sapply(perm, function(x)  sub("^\\s+", "", x)) # leading space
perm = as.vector(sapply(perm,function(x) sub("\\s+$", "", x))) #preceding space
perm1=NA
for(s in perm){ # kick out non-numerics
if(is.na(as.numeric(stri_sub(s,-2,-1)))==F){
if(grepl("http",s)==F) perm1=c(perm1,s)
}
}
perm1=perm1[-1]
author=NA
year=NA
for(s in perm1){
atemp = regmatches(s,gregexpr("[A-Z].*?[0-9]", s,perl=T))[[1]]
atemp = stri_sub(atemp,1,-2) # author
ytemp = regmatches(s,gregexpr("[0-9].{3,3}", s,perl=T))[[1]]
c=1
for(i in ytemp){
if(is.na(as.numeric(i))==F & length(as.numeric(i)>0)){
if(as.numeric(i)>1800) author=c(author,ifelse(length(atemp)>1,atemp[c],atemp)); year=c(year,i); c=c+1
}
}
}
author=author[-1]; year=year[-1]
author = gsub("et al.","et al",author); author = gsub("et al","et al.",author) # change all et al to et al.
author = as.vector(sapply(author,function(x) sub("\\s+$", "", x))) #preceding space
bibs = as.data.frame(cbind(author,year))
bibs = bibs[!duplicated(bibs),]
bibs = bibs[with(bibs,order(bibs$author,bibs$year)),]
return(bibs)
}
kjbref = bibcheck(t(kjbtext))
write.csv(kjbref,"kjbref.csv")
kjbref
setwd("C:/Users/f1kidd/Google Drive/GitHub/R")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(devtools,roxygen2)
setwd("./fmlogit")
document()
setwd("..")
install("fmlogit")
library(fmlogit)
setwd("./fmlogit")
document()
setwd("..")
install("fmlogit")
setwd("./fmlogit")
document()
document()
